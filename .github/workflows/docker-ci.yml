name: docker-ci

on:
  push:
    branches:
      - 'master'
  release:
    types: [published]

env:
  DOCKER_BUILDKIT: 1

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Find Git Tag
        id: tagger
        uses: jimschubert/query-tag-action@v2
        with:
          include: 'v*'
          exclude: '*-rc*'
          commit-ish: 'HEAD'
          skip-unshallow: 'true'
          abbrev: 7
      -
        name: Determine image tag type
        uses: haya14busa/action-cond@v1
        id: imgtag
        with:
          cond: ${{ github.event_name == 'release' }}
          if_true: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ github.event.release.tag_name }},${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
          if_false: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push scratch image
        id: docker_build_scratch
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/386,linux/arm/v7
          push: true
          tags: ${{ steps.imgtag.outputs.value }}
          target: scratch
          build-args: 'GIT_DESC=${{ steps.tagger.outputs.tag }}'
      -
        name: Build and push Alpine image
        id: docker_build_alpine
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/386,linux/arm/v7
          push: true
          tags: ${{ steps.imgtag.outputs.value }}-alpine
          target: alpine
          build-args: 'GIT_DESC=${{ steps.tagger.outputs.tag }}'
